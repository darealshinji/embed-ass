#!/usr/bin/env bash

# Copyright (c) 2014, djcj <djcj@gmx.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


if [ "$1" = "" ] || [ "$2" = "" ] ; then
    echo "Attach files to ASS subtitles:"
    echo "  $0 <directory> <ass_file>"
    echo "  $0 <file> <ass_file>"
    echo ""
    echo "Extract attachments from ASS subtitles:"
    echo "  $0 -e <ass_file>"
    exit 0;
fi


####################### extract #######################
if [ "$1" = "-e" ] ; then
    if [ "$(`which mkvmerge`)" = "" ] && [ "$(`which mkvextract`)" = "" ] ; then
        echo "Can't find 'mkvmerge' or 'mkvextract'"
        exit 0
    else
        assfile="`basename "${2}"`"
        cd "`dirname "${2}"`"

        mkvmerge -o "${assfile}.mks" "$assfile" >/dev/null
        mkdir -p "${assfile}_attachments" && cd "${assfile}_attachments"

        max=`LC_ALL=C mkvmerge -i "../${assfile}.mks" | grep -e 'Attachment ID' | tail -n1 | cut -d ' ' -f3 | tr -d ':'`
        for i in `seq 1 $max` ; do
            mkvextract attachments "../${assfile}.mks" "$i" >/dev/null
        done

        for f in ./* ; do
            ext="`basename "${f##*.}"`"
            file="`basename "${f%.*}"`"
            file="`echo ${file:0:-2}`"
            mv "$f" "${file}.${ext}"
        done

        rm "../${assfile}.mks"
    fi
    exit 0
fi
#######################################################


######################  attach  #######################
if [ "$(`which uuencode-simple`)" = "" ] ; then
    if [ -f "./uuencode-simple" ] ; then
        uuencoder="./uuencode-simple"
    else
        echo "Can't find 'uuencode-simple'"
        exit 0
    fi
else
    uuencoder="uuencode-simple"
fi

if [ ! -f "$2" ] ; then
    echo "Target \"$2\" is not a file!"
    exit 0;
fi

awk '/\[Events\]/{n++}{print >"out" n ".tmp" }' "$2"
echo "[Fonts]" >> "out.tmp"

if [ -d "$1" ] ; then
    for f in "$1"/* ; do
        filename=$(basename "${f%.*}")
        echo "fontname: ${filename}_0.${f##*.}" >> "out.tmp"
        "$uuencoder" -e "$f" >> "out.tmp"
        echo "" >> "out.tmp"
    done
else
    filename=$(basename "${1%.*}")
    echo "fontname: ${filename}_0.${1##*.}" >> "out.tmp"
    "$uuencoder" -e "$1" >> "out.tmp"
fi

assfile="`basename "${2}"`"
assdir="`dirname "${2}"`"
echo -e "\n" >> "out.tmp"
cat "out.tmp" "out1.tmp" > "${assdir}/${assfile%.*}_fonts_attached.ass"
rm "out.tmp" "out1.tmp"
######################################################

