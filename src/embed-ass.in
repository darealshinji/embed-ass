
set -e

# Copyright (c) 2014-2015, djcj <djcj@gmx.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


uuencoder="uuencode-simple"
in="${1}"
ass="${2}"
tmp="`date +%N`"

if [ "$(`which $uuencoder`)" = "" ] ; then

    if [ -f $(cd $(dirname "$0") && pwd -P)/"$uuencoder" ] ; then

        uuencoder=$(cd $(dirname "$0") && pwd -P)/"$uuencoder"

    else

        echo "Can't find '$uuencoder'"
        exit 1
    fi
fi


if [ "$in" = "" ] || [ "$ass" = "" ] ; then

    echo "Attach files to ASS subtitles:"
    echo "  $0 <directory> <ass_file>"
    echo "  $0 <file> <ass_file>"
    echo ""
    echo "Extract attachments from ASS subtitles:"
    echo "  $0 -x <ass_file>"

    exit 0
fi


### extract ###

if [ "$in" = "-x" ] ; then

    if [ ! -f "$ass" ] ; then

        echo "Target \"$ass\" is not a file!"
        exit 1
    fi

    mkdir "${ass}_attachments" >& /dev/null
    if test $? = 1 ; then
        echo "Directory '${ass}_attachments' already exists."
        exit 1
    fi
    cd "${ass}_attachments"

    awk '/\[Fonts\]/{n++}{print >"out" n ".txt" }' "../$ass"
    awk 'NR>1' out1.txt > in.txt
    rm out.txt out1.txt

    awk '/\[Events\]/{n++}{print >"out" n ".txt" }' in.txt
    rm in.txt && mv out.txt in.txt

    awk '/fontname: /{n++}{print >"out" n ".txt" }' in.txt
    rm in.txt

    for f in ./* ; do
        getname=`grep -e 'fontname: ' "$f" | sed 's/fontname: //g'`
        ext="${getname##*.}"
        name="${getname%.*}"
        out="${name%??}.$ext"

        awk 'NR>1' "$f" | tr -d '\r' | tr -d '\n' >"$out.tmp1"
        sed -e "s/.\{80\}/&\r\n/g" < "$out.tmp1" > "$out.tmp2"
        rm "$out.tmp1"
    done

    rm out?.txt
    cd ..

    for f in "${ass}_attachments"/* ; do
    
        $uuencoder -d "$f" -o "${f%.*}"
    done

    rm "${ass}_attachments/"*.tmp2
    exit 0
fi



###  attach  ###

if [ ! -f "$ass" ] ; then
    echo "Target \"$ass\" is not a file!"
    exit 1
fi

assfile="`basename "$ass"`"
assdir="`dirname "$ass"`"
out="${assdir}/${assfile%.*}_fonts_attached.ass"

echo "[Fonts]" >> "$tmp"

if [ -d "$in" ] ; then
    for f in "$in"/* ; do
        filename=$(basename "${f%.*}")
        echo "fontname: ${filename}_0.${f##*.}" >> "$tmp"
        "$uuencoder" -e "$f" >> "$tmp"
        printf "\n" >> "$tmp"
    done
elif [ -f "$in" ] ; then
    filename=$(basename "${in%.*}")
    echo "fontname: ${filename}_0.${in##*.}" >> "$tmp"
    "$uuencoder" -e "$in" >> "$tmp"
    printf "\n" >> "$tmp"
else
    echo "Can't find '$in'"
    exit 1
fi

echo "" >> "$tmp"
echo "[Events]" >> "$tmp"
cp "$ass" "$out"
sed -i -e "s/\[Events\]/@DELETEME@/; /@DELETEME@/r "$tmp"" -e "/@DELETEME@/d" "$out"
rm "$tmp"
exit 0
